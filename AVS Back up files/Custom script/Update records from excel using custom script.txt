using System.IO;
using OfficeOpenXml;
using OfficeOpenXml.ExcelPackage;
using OfficeOpenXml.ExcelRange;

 class STE_ExcelReaderForCustomScript
{
    
    public  str                                     name,LineDiscStr,id;
    public int64     Recid ;
    /// <summary>
    /// Class entry point. The system will call this method when a designated menu
    /// is selected or when execution starts and this class is set as the startup class.
    /// </summary>
    /// <param name = "_args">The specified arguments.</param>
    public static void main(Args _args)
    {
        STE_ExcelReaderForCustomScript curentClass = new STE_ExcelReaderForCustomScript();
        curentClass.importData();

        Info('script executed');
    }

    void importData()
    {
        System.IO.Stream                        stream;
        DialogGroup                             dlgUploadGroup;
        FileUploadBuild                         fileUploadBuild;
        FormBuildControl                        formBuildControl;
        list List = new List(types::Int64);
       
        while (appl.ttsLevel() > 0)
        {
            ttsAbort;
        }

        Dialog           dialog =    new Dialog("Upload file");

        dlgUploadGroup          = dialog.addGroup("File");
        formBuildControl        = dialog.formBuildDesign().control(dlgUploadGroup.name());
        fileUploadBuild         = formBuildControl.addControlEx(classstr(FileUpload), 'Upload');

        fileUploadBuild.style(FileUploadStyle::MinimalWithFilename);
        fileUploadBuild.fileTypesAccepted('.xlsx');
                
        if (dialog.run() && dialog.closedOk())
        {
            FileUpload fileUploadControl     = dialog.formRun().control(dialog.formRun().controlId('Upload'));
            FileUploadTemporaryStorageResult fileUploadResult = fileUploadControl.getFileUploadResult();
            STE_SalesInvoiceLine   SalesInvoiceLine;
            if(fileUploadResult != null && fileUploadResult.getUploadStatus())
            {
                stream = fileUploadResult.openResult();
                using (ExcelPackage Package = new ExcelPackage(stream))
                {
                    int rowCount, i,columncount;

                    Package.Load(stream);
                    ExcelWorksheet worksheet           = package.get_Workbook().get_Worksheets().get_Item(1);
                    OfficeOpenXml.ExcelRange range     = worksheet.Cells;

                    rowCount           = (worksheet.Dimension.End.Row) - (worksheet.Dimension.Start.Row)  + 1;
                    columncount        = (worksheet.Dimension.End.Column);

                    for (i = 1; i<= rowCount; i++)
                    {
                        if(i == 1)
                        {
                            continue;
                        }
                       
                        name = (range.get_Item(i,1).Value);
                        id   = (range.get_Item(i,2).Value);
                        LineDiscStr = (range.get_Item(i,3).Value);
                        Recid = str2Int64(id);
                        List.addEnd(Recid);
                        while (appl.ttsLevel() > 0)
                        {
                            ttsAbort;
                        }
                        ttsbegin;
                        update_recordset SalesInvoiceLine setting Belegnummer = LineDiscStr
                            where SalesInvoiceLine.RecId == Recid;
                        //select forupdate SalesInvoiceLine where SalesInvoiceLine.RecId == Recid;
                        //if(SalesInvoiceLine)
                        //{
                        //    ttsbegin;
                        //    SalesInvoiceLine.Belegnummer = LineDiscStr;
                        //    SalesInvoiceLine.doUpdate();
                        //    ttscommit;
                        //}
                        ttscommit;
 
                    }
                    info(strFmt('AccountNum %1',list));
                    ttsbegin;
                }
            }
        }
    }

}