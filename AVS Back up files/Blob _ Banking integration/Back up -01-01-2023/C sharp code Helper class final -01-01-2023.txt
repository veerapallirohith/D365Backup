using System;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using System.IO;
using System.Net;

namespace STE_AzureBlobStorageLibrary
{
    public class STE_AzureBlobStorageHelperLibrary
    {
        public string srcPath { get; set; }
        public string destinationPath { get; set; }
        public string storageAccountName { get; set; }
        public string containerName { get; set; }
        public string storageEndPoint { get; set; }
        public string blobName { get; set; }

        public string ReasonMesage { get; set; }

        public string mesg { get; set; }




        HttpClient httpClient = new HttpClient();

        static void Main()
        {

        }

        public Boolean saveFileInBlob(string _StorageAccountName, string _Container, string _SASKey = "", string _BlobName = "", System.IO.Stream _stream = null)
        {
            
            string storageAddress = string.Format("https://{0}.blob.core.windows.net/", _StorageAccountName);

            //preparing URI to drop the file to blob
            Uri containerUrl = new Uri(storageAddress + $"{_Container}/{_BlobName}" + "?" + _SASKey);

            // which returns complete URI which is prepared in previous step
            string sasUri = containerUrl.AbsoluteUri;

            //x-ms-blob-type: <BlockBlob> - Returns the blob's type.
            httpClient.DefaultRequestHeaders.Add("x-ms-blob-type", "BlockBlob");

            // Drops the specified Uri as an asynchronous operation to blob
            HttpResponseMessage response = httpClient.PutAsync(sasUri, new StreamContent(_stream)).GetAwaiter().GetResult();
            if(response.IsSuccessStatusCode == false)
            {
                ReasonMesage = response.ReasonPhrase;
            bool mess = response.IsSuccessStatusCode;
            Console.WriteLine (mess.ToString());
               mesg = mess.ToString();
            }
            if (response.IsSuccessStatusCode)
                return true;
            else
                return false;

           
        }

        
    }



}
